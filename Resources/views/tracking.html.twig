{% set userID = null %}
{% spaceless %}
    <script>
        var gaProperty = '{{ config.tracking_id }}';

        {% if config.provide_opt_out %}
            var disableStr = 'ga-disable-' + gaProperty;
            if (document.cookie.indexOf(disableStr + '=true') > -1) {
                window[disableStr] = true;
            }
            function googleOptOut() {
                document.cookie = disableStr + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';
                window[disableStr] = true;
            }
        {%- endif %}

        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

        ga('create', gaProperty, '{{ config.domain|default(app.request.getHttpHost()) }}', {
            {%- if config.anonymize_ip %}anonymizeIp: true,{% endif -%}
            siteSpeedSampleRate: {{ config.site_speed_sample_rate -}}
        });
        ga('require', 'linkid', 'linkid.js');
        {% if config.enable_displayfeatures %}
            ga('require', 'displayfeatures');
        {% endif %}

        {% for event in app.session.get(analytics_flashbag_name).get('metrics')|default([]) %}
            ga('set', '{{ event.getName() }}', '{{ event.getValue() }}');
            {% if event.getName() == 'userId' %}
                {% set userID = event.getValue() %}
            {% endif %}
        {% endfor %}

        {% for event in app.session.get(analytics_flashbag_name).get('analytics')|default([]) %}
            {% if  event.getLabel() is null and event.getValue() is null %}
                ga('send', 'event', '{{ event.getCategory() }}', '{{ event.getAction() }}');
            {% elseif event.getValue() is null %}
                ga('send', 'event', '{{ event.getCategory() }}', '{{ event.getAction() }}', '{{ event.getLabel() }}');
            {% else %}
                ga('send', 'event', '{{ event.getCategory() }}', '{{ event.getAction() }}', '{{ event.getLabel() }}', {{ event.getValue()|number_format(5, '.', '') }});
            {% endif %}
        {% endfor %}

        {% for testID, variation in app.session.get(test_flashbag_name)|default([]) %}
            ga('set', 'expId', '{{ testID }}');
            ga('set', 'expVar', '{{ variation[0] }}');
        {% endfor %}

        ga('send', 'pageview');
    </script>

    {% if userID is not empty and 'swis_google_analytics.add_client_id'|route_exists %}
        <script>
            ga(function(tracker) {
                {#- Do an evil ajax request for notifying the server about the clientID - WE HAVE NO JQUERY AT THIS POINT! -#}
                var xmlhttp;
                if (window.XMLHttpRequest) {
                    // code for IE7+, Firefox, Chrome, Opera, Safari
                    xmlhttp = new XMLHttpRequest();
                } else {
                    // code for IE6, IE5
                    xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
                }
                xmlhttp.open('GET', '{{ path('swis_google_analytics.add_client_id', {userID: userID}) }}/'+tracker.get('clientId'), true);
                xmlhttp.send();
            });
        </script>
    {% endif %}
{% endspaceless %}
